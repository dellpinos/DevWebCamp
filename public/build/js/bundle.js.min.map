{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","Regex","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\n\n    const horas = document.querySelector('#horas');\n\n    if (horas) {\n\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n\n        dias.forEach(dia => {\n            dia.addEventListener('change', terminoBusqueda);\n        });\n\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        }\n\n\n\n        if (!Object.values(busqueda).includes('')) {\n\n            (async () => {\n                await buscarEventos();\n\n                // Resaltar hora actual\n                const id = inputHiddenHora.value;\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\n\n                horaSeleccionada.onclick = seleccionarHora;\n            })();\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            //Reiniciar input hidden y selector de horas\n\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            if (Object.values(busqueda).includes('')) {\n                return;\n            }\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n\n            const { categoria_id, dia } = busqueda;\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n\n\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            // Reiniciar horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\n\n\n            // Comprobar horas disponibles - modificar estilos\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n\n            const listadoHorasArray = Array.from(listadoHoras);\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\n\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\n\n            \n        }\n        function seleccionarHora(e) {\n            // Deshabilitar hora previa\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if (horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            // Agregar clase para cambiar el estilo del <li>\n            e.target.classList.add('horas__hora--seleccionada');\n            inputHiddenHora.value = e.target.dataset.horaId;\n\n            //Llenar el valu del input hidden\n\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\n        }\n    }\n\n})();","(function () {\n\n    const ponentesInput = document.querySelector('#ponentes');\n    if (ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n        const listadoPonentes = document.querySelector('#listado-ponentes');\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\n\n        obtenerPonentes();\n        ponentesInput.addEventListener('input', buscarPonentes);\n\n        if(ponenteHidden.value) {\n            (async() => {\n                const ponente = await obtenerPonente(ponenteHidden.value);\n\n                // Insertar en el HTML\n                const ponenteDOM = document.createElement('LI');\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                ponenteDOM.textContent = `${ponente.nombre} ${ponente.apellido}`;\n                listadoPonentes.appendChild(ponenteDOM);\n            })();\n        }\n\n        async function obtenerPonente(id){\n            const url = `/api/ponente?id=${id}`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n            return resultado;\n        }\n\n\n        async function obtenerPonentes() {\n            const url = '/api/ponentes';\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n\n            formatearPonentes(resultado);\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map(ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                }\n            });\n\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value;\n            if (busqueda.length > 3) {\n                const Regex = new RegExp(busqueda, 'i');\n\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if (ponente.nombre.toLowerCase().search(Regex) !== -1) {\n                        return ponente\n                    }\n                });\n            } else {\n                ponentesFiltrados = '';\n            }\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while (listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\n            }\n            if (ponentesFiltrados.length > 0) {\n\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id;\n                    ponenteHTML.onclick = seleccionarPonente;\n\n                    // Añadir al DOM\n                    listadoPonentes.appendChild(ponenteHTML);\n                });\n            } else {\n                const noResultados = document.createElement('P');\n                noResultados.classList.add('listado-ponentes__no-resultado');\n                noResultados.textContent = \"No hay resultados\";\n                listadoPonentes.appendChild(noResultados);\n            }\n        }\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\n            if (ponentePrevio) {\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\n            }\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\n\n            ponenteHidden.value = ponente.dataset.ponenteId;\n        }\n    }\n\n\n\n})();","(function(){\n\n    const tagsInput = document.querySelector('#tags_input');\n\n    if(tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n        // Recuperar del input hidden\n        if(tagsInputHidden.value !== ''){\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        // Escuchar los cambios en el input\n        tagsInput.addEventListener('keypress', guardarTag);\n\n        function guardarTag(e){\n            if(e.keyCode === 44) {\n                if(e.target.value.trim() === '' || e.target.value < 3) {\n                    return;\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n\n                mostrarTags();\n            }\n        }\n        \n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach( tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag');\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag;\n                tagsDiv.appendChild(etiqueta);\n            });\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e){\n            e.target.remove(); // Tengo un bug, si el usuario repite un tag elimina todas las coincidencias del array pero no de la pantalla\n            tags = tags.filter( tag => tag !== e.target.textContent);\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})();\n\n"]}