{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","json","horasDisponibles","console","log","obtenerHorasDisponibles","buscarEventos","addEventListener","forEach","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","remove","filter","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAIA,GAFAA,SAAAC,cAAA,UAEA,CAEA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBAEAK,EAAAN,SAAAO,iBAAA,gBACAP,SAAAC,cAAA,mBAQA,SAAAO,EAAAC,GACAP,EAAAO,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAEAC,OAAAC,OAAAZ,GAAAa,SAAA,KAMAC,iBACA,MAAAb,aAAAA,EAAAC,IAAAA,GAAAF,EACAe,EAAA,+BAAAb,kBAAAD,IACAe,QAAAC,MAAAF,SACAC,EAAAE,QAKA,WACA,MAAAC,EAAArB,SAAAO,iBAAA,aAEAe,QAAAC,IAAAF,GANAG,GATAC,GAZApB,EAAAqB,iBAAA,SAAAlB,GAEAF,EAAAqB,QAAAvB,IACAA,EAAAsB,iBAAA,SAAAlB,MAnBA,GCAA,WAEA,MAAAoB,EAAA5B,SAAAC,cAAA,eAEA,GAAA2B,EAAA,CAEA,MAAAC,EAAA7B,SAAAC,cAAA,SACA6B,EAAA9B,SAAAC,cAAA,iBAEA,IAAA8B,EAAA,GAuBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAJ,QAAAO,IACA,MAAAC,EAAAnC,SAAAoC,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAF,YAAAC,EACAC,EAAAI,WAAAC,EACAX,EAAAY,YAAAN,KAEAO,IAGA,SAAAF,EAAA/B,GACAA,EAAAC,OAAAiC,SACAZ,EAAAA,EAAAa,OAAAV,GAAAA,IAAAzB,EAAAC,OAAAuB,aACAS,IAGA,SAAAA,IACAZ,EAAAlB,MAAAmB,EAAAc,WAxCA,KAAAf,EAAAlB,QACAmB,EAAAD,EAAAlB,MAAAkC,MAAA,KACAd,KAIAJ,EAAAF,iBAAA,YAEA,SAAAjB,GACA,GAAA,KAAAA,EAAAsC,QAAA,CACA,GAAA,KAAAtC,EAAAC,OAAAE,MAAAoC,QAAAvC,EAAAC,OAAAE,MAAA,EACA,OAEAH,EAAAwC,iBACAlB,EAAA,IAAAA,EAAAtB,EAAAC,OAAAE,MAAAoC,QACApB,EAAAhB,MAAA,GAEAoB,SA5BA","file":"bundle.js","sourcesContent":["(function (){\n\n    const horas = document.querySelector('#horas');\n\n    if(horas) {\n\n        let busqueda = {\n            categoria_id: '',\n            dia: '' \n        }\n\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n        \n        dias.forEach( dia => {\n            dia.addEventListener('change', terminoBusqueda);\n        });\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            if(Object.values(busqueda).includes('')){\n                return;\n            }\n            buscarEventos();\n        }\n\n        async function buscarEventos(){\n            const {categoria_id, dia} = busqueda; \n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n            obtenerHorasDisponibles();\n        }\n\n        function obtenerHorasDisponibles() {\n            const horasDisponibles = document.querySelectorAll('#horas li');\n\n            console.log(horasDisponibles);\n        }\n    }\n\n})();","(function(){\n\n    const tagsInput = document.querySelector('#tags_input');\n\n    if(tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n        // Recuperar del input hidden\n        if(tagsInputHidden.value !== ''){\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        // Escuchar los cambios en el input\n        tagsInput.addEventListener('keypress', guardarTag);\n\n        function guardarTag(e){\n            if(e.keyCode === 44) {\n                if(e.target.value.trim() === '' || e.target.value < 3) {\n                    return;\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n\n                mostrarTags();\n            }\n        }\n        \n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach( tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag');\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag;\n                tagsDiv.appendChild(etiqueta);\n            });\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e){\n            e.target.remove(); // Tengo un bug, si el usuario repite un tag elimina todas las coincidencias del array pero no de la pantalla\n            tags = tags.filter( tag => tag !== e.target.textContent);\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})();\n\n"]}